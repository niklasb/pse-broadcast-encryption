// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cryptocast/crypto/naorpinkas/Protos.proto

package cryptocast.crypto.naorpinkas;

public final class Protos {
  private Protos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface NaorPinkasShareECOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .cryptocast.crypto.BInteger r = 1;
    boolean hasR();
    cryptocast.crypto.Protos.BInteger getR();
    cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder();
    
    // required .cryptocast.crypto.BInteger i = 2;
    boolean hasI();
    cryptocast.crypto.Protos.BInteger getI();
    cryptocast.crypto.Protos.BIntegerOrBuilder getIOrBuilder();
    
    // required .cryptocast.crypto.ECPoint grpi = 3;
    boolean hasGrpi();
    cryptocast.crypto.Protos.ECPoint getGrpi();
    cryptocast.crypto.Protos.ECPointOrBuilder getGrpiOrBuilder();
  }
  public static final class NaorPinkasShareEC extends
      com.google.protobuf.GeneratedMessage
      implements NaorPinkasShareECOrBuilder {
    // Use NaorPinkasShareEC.newBuilder() to construct.
    private NaorPinkasShareEC(Builder builder) {
      super(builder);
    }
    private NaorPinkasShareEC(boolean noInit) {}
    
    private static final NaorPinkasShareEC defaultInstance;
    public static NaorPinkasShareEC getDefaultInstance() {
      return defaultInstance;
    }
    
    public NaorPinkasShareEC getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .cryptocast.crypto.BInteger r = 1;
    public static final int R_FIELD_NUMBER = 1;
    private cryptocast.crypto.Protos.BInteger r_;
    public boolean hasR() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public cryptocast.crypto.Protos.BInteger getR() {
      return r_;
    }
    public cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder() {
      return r_;
    }
    
    // required .cryptocast.crypto.BInteger i = 2;
    public static final int I_FIELD_NUMBER = 2;
    private cryptocast.crypto.Protos.BInteger i_;
    public boolean hasI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public cryptocast.crypto.Protos.BInteger getI() {
      return i_;
    }
    public cryptocast.crypto.Protos.BIntegerOrBuilder getIOrBuilder() {
      return i_;
    }
    
    // required .cryptocast.crypto.ECPoint grpi = 3;
    public static final int GRPI_FIELD_NUMBER = 3;
    private cryptocast.crypto.Protos.ECPoint grpi_;
    public boolean hasGrpi() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public cryptocast.crypto.Protos.ECPoint getGrpi() {
      return grpi_;
    }
    public cryptocast.crypto.Protos.ECPointOrBuilder getGrpiOrBuilder() {
      return grpi_;
    }
    
    private void initFields() {
      r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      i_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      grpi_ = cryptocast.crypto.Protos.ECPoint.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGrpi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getR().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getI().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getGrpi().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, i_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, grpi_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, i_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, grpi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_fieldAccessorTable;
      }
      
      // Construct using cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRFieldBuilder();
          getIFieldBuilder();
          getGrpiFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (rBuilder_ == null) {
          r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
        } else {
          rBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (iBuilder_ == null) {
          i_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
        } else {
          iBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (grpiBuilder_ == null) {
          grpi_ = cryptocast.crypto.Protos.ECPoint.getDefaultInstance();
        } else {
          grpiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.getDescriptor();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC getDefaultInstanceForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.getDefaultInstance();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC build() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC buildPartial() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC result = new cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (rBuilder_ == null) {
          result.r_ = r_;
        } else {
          result.r_ = rBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (iBuilder_ == null) {
          result.i_ = i_;
        } else {
          result.i_ = iBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (grpiBuilder_ == null) {
          result.grpi_ = grpi_;
        } else {
          result.grpi_ = grpiBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC) {
          return mergeFrom((cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC other) {
        if (other == cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.getDefaultInstance()) return this;
        if (other.hasR()) {
          mergeR(other.getR());
        }
        if (other.hasI()) {
          mergeI(other.getI());
        }
        if (other.hasGrpi()) {
          mergeGrpi(other.getGrpi());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasR()) {
          
          return false;
        }
        if (!hasI()) {
          
          return false;
        }
        if (!hasGrpi()) {
          
          return false;
        }
        if (!getR().isInitialized()) {
          
          return false;
        }
        if (!getI().isInitialized()) {
          
          return false;
        }
        if (!getGrpi().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              cryptocast.crypto.Protos.BInteger.Builder subBuilder = cryptocast.crypto.Protos.BInteger.newBuilder();
              if (hasR()) {
                subBuilder.mergeFrom(getR());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setR(subBuilder.buildPartial());
              break;
            }
            case 18: {
              cryptocast.crypto.Protos.BInteger.Builder subBuilder = cryptocast.crypto.Protos.BInteger.newBuilder();
              if (hasI()) {
                subBuilder.mergeFrom(getI());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setI(subBuilder.buildPartial());
              break;
            }
            case 26: {
              cryptocast.crypto.Protos.ECPoint.Builder subBuilder = cryptocast.crypto.Protos.ECPoint.newBuilder();
              if (hasGrpi()) {
                subBuilder.mergeFrom(getGrpi());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGrpi(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .cryptocast.crypto.BInteger r = 1;
      private cryptocast.crypto.Protos.BInteger r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> rBuilder_;
      public boolean hasR() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public cryptocast.crypto.Protos.BInteger getR() {
        if (rBuilder_ == null) {
          return r_;
        } else {
          return rBuilder_.getMessage();
        }
      }
      public Builder setR(cryptocast.crypto.Protos.BInteger value) {
        if (rBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          r_ = value;
          onChanged();
        } else {
          rBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setR(
          cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (rBuilder_ == null) {
          r_ = builderForValue.build();
          onChanged();
        } else {
          rBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeR(cryptocast.crypto.Protos.BInteger value) {
        if (rBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              r_ != cryptocast.crypto.Protos.BInteger.getDefaultInstance()) {
            r_ =
              cryptocast.crypto.Protos.BInteger.newBuilder(r_).mergeFrom(value).buildPartial();
          } else {
            r_ = value;
          }
          onChanged();
        } else {
          rBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearR() {
        if (rBuilder_ == null) {
          r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
          onChanged();
        } else {
          rBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public cryptocast.crypto.Protos.BInteger.Builder getRBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder() {
        if (rBuilder_ != null) {
          return rBuilder_.getMessageOrBuilder();
        } else {
          return r_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> 
          getRFieldBuilder() {
        if (rBuilder_ == null) {
          rBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder>(
                  r_,
                  getParentForChildren(),
                  isClean());
          r_ = null;
        }
        return rBuilder_;
      }
      
      // required .cryptocast.crypto.BInteger i = 2;
      private cryptocast.crypto.Protos.BInteger i_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> iBuilder_;
      public boolean hasI() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public cryptocast.crypto.Protos.BInteger getI() {
        if (iBuilder_ == null) {
          return i_;
        } else {
          return iBuilder_.getMessage();
        }
      }
      public Builder setI(cryptocast.crypto.Protos.BInteger value) {
        if (iBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          i_ = value;
          onChanged();
        } else {
          iBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setI(
          cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (iBuilder_ == null) {
          i_ = builderForValue.build();
          onChanged();
        } else {
          iBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeI(cryptocast.crypto.Protos.BInteger value) {
        if (iBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              i_ != cryptocast.crypto.Protos.BInteger.getDefaultInstance()) {
            i_ =
              cryptocast.crypto.Protos.BInteger.newBuilder(i_).mergeFrom(value).buildPartial();
          } else {
            i_ = value;
          }
          onChanged();
        } else {
          iBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearI() {
        if (iBuilder_ == null) {
          i_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
          onChanged();
        } else {
          iBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public cryptocast.crypto.Protos.BInteger.Builder getIBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.Protos.BIntegerOrBuilder getIOrBuilder() {
        if (iBuilder_ != null) {
          return iBuilder_.getMessageOrBuilder();
        } else {
          return i_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> 
          getIFieldBuilder() {
        if (iBuilder_ == null) {
          iBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder>(
                  i_,
                  getParentForChildren(),
                  isClean());
          i_ = null;
        }
        return iBuilder_;
      }
      
      // required .cryptocast.crypto.ECPoint grpi = 3;
      private cryptocast.crypto.Protos.ECPoint grpi_ = cryptocast.crypto.Protos.ECPoint.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.ECPoint, cryptocast.crypto.Protos.ECPoint.Builder, cryptocast.crypto.Protos.ECPointOrBuilder> grpiBuilder_;
      public boolean hasGrpi() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public cryptocast.crypto.Protos.ECPoint getGrpi() {
        if (grpiBuilder_ == null) {
          return grpi_;
        } else {
          return grpiBuilder_.getMessage();
        }
      }
      public Builder setGrpi(cryptocast.crypto.Protos.ECPoint value) {
        if (grpiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          grpi_ = value;
          onChanged();
        } else {
          grpiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setGrpi(
          cryptocast.crypto.Protos.ECPoint.Builder builderForValue) {
        if (grpiBuilder_ == null) {
          grpi_ = builderForValue.build();
          onChanged();
        } else {
          grpiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeGrpi(cryptocast.crypto.Protos.ECPoint value) {
        if (grpiBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              grpi_ != cryptocast.crypto.Protos.ECPoint.getDefaultInstance()) {
            grpi_ =
              cryptocast.crypto.Protos.ECPoint.newBuilder(grpi_).mergeFrom(value).buildPartial();
          } else {
            grpi_ = value;
          }
          onChanged();
        } else {
          grpiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearGrpi() {
        if (grpiBuilder_ == null) {
          grpi_ = cryptocast.crypto.Protos.ECPoint.getDefaultInstance();
          onChanged();
        } else {
          grpiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public cryptocast.crypto.Protos.ECPoint.Builder getGrpiBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getGrpiFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.Protos.ECPointOrBuilder getGrpiOrBuilder() {
        if (grpiBuilder_ != null) {
          return grpiBuilder_.getMessageOrBuilder();
        } else {
          return grpi_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.ECPoint, cryptocast.crypto.Protos.ECPoint.Builder, cryptocast.crypto.Protos.ECPointOrBuilder> 
          getGrpiFieldBuilder() {
        if (grpiBuilder_ == null) {
          grpiBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.Protos.ECPoint, cryptocast.crypto.Protos.ECPoint.Builder, cryptocast.crypto.Protos.ECPointOrBuilder>(
                  grpi_,
                  getParentForChildren(),
                  isClean());
          grpi_ = null;
        }
        return grpiBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cryptocast.crypto.naorpinkas.NaorPinkasShareEC)
    }
    
    static {
      defaultInstance = new NaorPinkasShareEC(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cryptocast.crypto.naorpinkas.NaorPinkasShareEC)
  }
  
  public interface NaorPinkasShareSchnorrOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .cryptocast.crypto.BInteger r = 1;
    boolean hasR();
    cryptocast.crypto.Protos.BInteger getR();
    cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder();
    
    // required .cryptocast.crypto.BInteger i = 2;
    boolean hasI();
    cryptocast.crypto.Protos.BInteger getI();
    cryptocast.crypto.Protos.BIntegerOrBuilder getIOrBuilder();
    
    // required .cryptocast.crypto.BInteger grpi = 3;
    boolean hasGrpi();
    cryptocast.crypto.Protos.BInteger getGrpi();
    cryptocast.crypto.Protos.BIntegerOrBuilder getGrpiOrBuilder();
  }
  public static final class NaorPinkasShareSchnorr extends
      com.google.protobuf.GeneratedMessage
      implements NaorPinkasShareSchnorrOrBuilder {
    // Use NaorPinkasShareSchnorr.newBuilder() to construct.
    private NaorPinkasShareSchnorr(Builder builder) {
      super(builder);
    }
    private NaorPinkasShareSchnorr(boolean noInit) {}
    
    private static final NaorPinkasShareSchnorr defaultInstance;
    public static NaorPinkasShareSchnorr getDefaultInstance() {
      return defaultInstance;
    }
    
    public NaorPinkasShareSchnorr getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .cryptocast.crypto.BInteger r = 1;
    public static final int R_FIELD_NUMBER = 1;
    private cryptocast.crypto.Protos.BInteger r_;
    public boolean hasR() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public cryptocast.crypto.Protos.BInteger getR() {
      return r_;
    }
    public cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder() {
      return r_;
    }
    
    // required .cryptocast.crypto.BInteger i = 2;
    public static final int I_FIELD_NUMBER = 2;
    private cryptocast.crypto.Protos.BInteger i_;
    public boolean hasI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public cryptocast.crypto.Protos.BInteger getI() {
      return i_;
    }
    public cryptocast.crypto.Protos.BIntegerOrBuilder getIOrBuilder() {
      return i_;
    }
    
    // required .cryptocast.crypto.BInteger grpi = 3;
    public static final int GRPI_FIELD_NUMBER = 3;
    private cryptocast.crypto.Protos.BInteger grpi_;
    public boolean hasGrpi() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public cryptocast.crypto.Protos.BInteger getGrpi() {
      return grpi_;
    }
    public cryptocast.crypto.Protos.BIntegerOrBuilder getGrpiOrBuilder() {
      return grpi_;
    }
    
    private void initFields() {
      r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      i_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      grpi_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGrpi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getR().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getI().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getGrpi().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, i_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, grpi_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, i_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, grpi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_fieldAccessorTable;
      }
      
      // Construct using cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRFieldBuilder();
          getIFieldBuilder();
          getGrpiFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (rBuilder_ == null) {
          r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
        } else {
          rBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (iBuilder_ == null) {
          i_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
        } else {
          iBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (grpiBuilder_ == null) {
          grpi_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
        } else {
          grpiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.getDescriptor();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr getDefaultInstanceForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.getDefaultInstance();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr build() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr buildPartial() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr result = new cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (rBuilder_ == null) {
          result.r_ = r_;
        } else {
          result.r_ = rBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (iBuilder_ == null) {
          result.i_ = i_;
        } else {
          result.i_ = iBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (grpiBuilder_ == null) {
          result.grpi_ = grpi_;
        } else {
          result.grpi_ = grpiBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr) {
          return mergeFrom((cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr other) {
        if (other == cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.getDefaultInstance()) return this;
        if (other.hasR()) {
          mergeR(other.getR());
        }
        if (other.hasI()) {
          mergeI(other.getI());
        }
        if (other.hasGrpi()) {
          mergeGrpi(other.getGrpi());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasR()) {
          
          return false;
        }
        if (!hasI()) {
          
          return false;
        }
        if (!hasGrpi()) {
          
          return false;
        }
        if (!getR().isInitialized()) {
          
          return false;
        }
        if (!getI().isInitialized()) {
          
          return false;
        }
        if (!getGrpi().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              cryptocast.crypto.Protos.BInteger.Builder subBuilder = cryptocast.crypto.Protos.BInteger.newBuilder();
              if (hasR()) {
                subBuilder.mergeFrom(getR());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setR(subBuilder.buildPartial());
              break;
            }
            case 18: {
              cryptocast.crypto.Protos.BInteger.Builder subBuilder = cryptocast.crypto.Protos.BInteger.newBuilder();
              if (hasI()) {
                subBuilder.mergeFrom(getI());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setI(subBuilder.buildPartial());
              break;
            }
            case 26: {
              cryptocast.crypto.Protos.BInteger.Builder subBuilder = cryptocast.crypto.Protos.BInteger.newBuilder();
              if (hasGrpi()) {
                subBuilder.mergeFrom(getGrpi());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGrpi(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .cryptocast.crypto.BInteger r = 1;
      private cryptocast.crypto.Protos.BInteger r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> rBuilder_;
      public boolean hasR() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public cryptocast.crypto.Protos.BInteger getR() {
        if (rBuilder_ == null) {
          return r_;
        } else {
          return rBuilder_.getMessage();
        }
      }
      public Builder setR(cryptocast.crypto.Protos.BInteger value) {
        if (rBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          r_ = value;
          onChanged();
        } else {
          rBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setR(
          cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (rBuilder_ == null) {
          r_ = builderForValue.build();
          onChanged();
        } else {
          rBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeR(cryptocast.crypto.Protos.BInteger value) {
        if (rBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              r_ != cryptocast.crypto.Protos.BInteger.getDefaultInstance()) {
            r_ =
              cryptocast.crypto.Protos.BInteger.newBuilder(r_).mergeFrom(value).buildPartial();
          } else {
            r_ = value;
          }
          onChanged();
        } else {
          rBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearR() {
        if (rBuilder_ == null) {
          r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
          onChanged();
        } else {
          rBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public cryptocast.crypto.Protos.BInteger.Builder getRBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder() {
        if (rBuilder_ != null) {
          return rBuilder_.getMessageOrBuilder();
        } else {
          return r_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> 
          getRFieldBuilder() {
        if (rBuilder_ == null) {
          rBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder>(
                  r_,
                  getParentForChildren(),
                  isClean());
          r_ = null;
        }
        return rBuilder_;
      }
      
      // required .cryptocast.crypto.BInteger i = 2;
      private cryptocast.crypto.Protos.BInteger i_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> iBuilder_;
      public boolean hasI() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public cryptocast.crypto.Protos.BInteger getI() {
        if (iBuilder_ == null) {
          return i_;
        } else {
          return iBuilder_.getMessage();
        }
      }
      public Builder setI(cryptocast.crypto.Protos.BInteger value) {
        if (iBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          i_ = value;
          onChanged();
        } else {
          iBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setI(
          cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (iBuilder_ == null) {
          i_ = builderForValue.build();
          onChanged();
        } else {
          iBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeI(cryptocast.crypto.Protos.BInteger value) {
        if (iBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              i_ != cryptocast.crypto.Protos.BInteger.getDefaultInstance()) {
            i_ =
              cryptocast.crypto.Protos.BInteger.newBuilder(i_).mergeFrom(value).buildPartial();
          } else {
            i_ = value;
          }
          onChanged();
        } else {
          iBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearI() {
        if (iBuilder_ == null) {
          i_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
          onChanged();
        } else {
          iBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public cryptocast.crypto.Protos.BInteger.Builder getIBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.Protos.BIntegerOrBuilder getIOrBuilder() {
        if (iBuilder_ != null) {
          return iBuilder_.getMessageOrBuilder();
        } else {
          return i_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> 
          getIFieldBuilder() {
        if (iBuilder_ == null) {
          iBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder>(
                  i_,
                  getParentForChildren(),
                  isClean());
          i_ = null;
        }
        return iBuilder_;
      }
      
      // required .cryptocast.crypto.BInteger grpi = 3;
      private cryptocast.crypto.Protos.BInteger grpi_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> grpiBuilder_;
      public boolean hasGrpi() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public cryptocast.crypto.Protos.BInteger getGrpi() {
        if (grpiBuilder_ == null) {
          return grpi_;
        } else {
          return grpiBuilder_.getMessage();
        }
      }
      public Builder setGrpi(cryptocast.crypto.Protos.BInteger value) {
        if (grpiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          grpi_ = value;
          onChanged();
        } else {
          grpiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setGrpi(
          cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (grpiBuilder_ == null) {
          grpi_ = builderForValue.build();
          onChanged();
        } else {
          grpiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeGrpi(cryptocast.crypto.Protos.BInteger value) {
        if (grpiBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              grpi_ != cryptocast.crypto.Protos.BInteger.getDefaultInstance()) {
            grpi_ =
              cryptocast.crypto.Protos.BInteger.newBuilder(grpi_).mergeFrom(value).buildPartial();
          } else {
            grpi_ = value;
          }
          onChanged();
        } else {
          grpiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearGrpi() {
        if (grpiBuilder_ == null) {
          grpi_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
          onChanged();
        } else {
          grpiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public cryptocast.crypto.Protos.BInteger.Builder getGrpiBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getGrpiFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.Protos.BIntegerOrBuilder getGrpiOrBuilder() {
        if (grpiBuilder_ != null) {
          return grpiBuilder_.getMessageOrBuilder();
        } else {
          return grpi_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> 
          getGrpiFieldBuilder() {
        if (grpiBuilder_ == null) {
          grpiBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder>(
                  grpi_,
                  getParentForChildren(),
                  isClean());
          grpi_ = null;
        }
        return grpiBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cryptocast.crypto.naorpinkas.NaorPinkasShareSchnorr)
    }
    
    static {
      defaultInstance = new NaorPinkasShareSchnorr(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cryptocast.crypto.naorpinkas.NaorPinkasShareSchnorr)
  }
  
  public interface NaorPinkasMessageCommonOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 t = 1;
    boolean hasT();
    int getT();
    
    // required .cryptocast.crypto.BInteger r = 2;
    boolean hasR();
    cryptocast.crypto.Protos.BInteger getR();
    cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder();
    
    // required bytes encryptedSecret = 3;
    boolean hasEncryptedSecret();
    com.google.protobuf.ByteString getEncryptedSecret();
    
    // repeated .cryptocast.crypto.BInteger coefficients = 4;
    java.util.List<cryptocast.crypto.Protos.BInteger> 
        getCoefficientsList();
    cryptocast.crypto.Protos.BInteger getCoefficients(int index);
    int getCoefficientsCount();
    java.util.List<? extends cryptocast.crypto.Protos.BIntegerOrBuilder> 
        getCoefficientsOrBuilderList();
    cryptocast.crypto.Protos.BIntegerOrBuilder getCoefficientsOrBuilder(
        int index);
  }
  public static final class NaorPinkasMessageCommon extends
      com.google.protobuf.GeneratedMessage
      implements NaorPinkasMessageCommonOrBuilder {
    // Use NaorPinkasMessageCommon.newBuilder() to construct.
    private NaorPinkasMessageCommon(Builder builder) {
      super(builder);
    }
    private NaorPinkasMessageCommon(boolean noInit) {}
    
    private static final NaorPinkasMessageCommon defaultInstance;
    public static NaorPinkasMessageCommon getDefaultInstance() {
      return defaultInstance;
    }
    
    public NaorPinkasMessageCommon getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 t = 1;
    public static final int T_FIELD_NUMBER = 1;
    private int t_;
    public boolean hasT() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getT() {
      return t_;
    }
    
    // required .cryptocast.crypto.BInteger r = 2;
    public static final int R_FIELD_NUMBER = 2;
    private cryptocast.crypto.Protos.BInteger r_;
    public boolean hasR() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public cryptocast.crypto.Protos.BInteger getR() {
      return r_;
    }
    public cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder() {
      return r_;
    }
    
    // required bytes encryptedSecret = 3;
    public static final int ENCRYPTEDSECRET_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString encryptedSecret_;
    public boolean hasEncryptedSecret() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getEncryptedSecret() {
      return encryptedSecret_;
    }
    
    // repeated .cryptocast.crypto.BInteger coefficients = 4;
    public static final int COEFFICIENTS_FIELD_NUMBER = 4;
    private java.util.List<cryptocast.crypto.Protos.BInteger> coefficients_;
    public java.util.List<cryptocast.crypto.Protos.BInteger> getCoefficientsList() {
      return coefficients_;
    }
    public java.util.List<? extends cryptocast.crypto.Protos.BIntegerOrBuilder> 
        getCoefficientsOrBuilderList() {
      return coefficients_;
    }
    public int getCoefficientsCount() {
      return coefficients_.size();
    }
    public cryptocast.crypto.Protos.BInteger getCoefficients(int index) {
      return coefficients_.get(index);
    }
    public cryptocast.crypto.Protos.BIntegerOrBuilder getCoefficientsOrBuilder(
        int index) {
      return coefficients_.get(index);
    }
    
    private void initFields() {
      t_ = 0;
      r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      encryptedSecret_ = com.google.protobuf.ByteString.EMPTY;
      coefficients_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncryptedSecret()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getR().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCoefficientsCount(); i++) {
        if (!getCoefficients(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, t_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, r_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, encryptedSecret_);
      }
      for (int i = 0; i < coefficients_.size(); i++) {
        output.writeMessage(4, coefficients_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, t_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, r_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, encryptedSecret_);
      }
      for (int i = 0; i < coefficients_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, coefficients_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_fieldAccessorTable;
      }
      
      // Construct using cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRFieldBuilder();
          getCoefficientsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        t_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rBuilder_ == null) {
          r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
        } else {
          rBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        encryptedSecret_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (coefficientsBuilder_ == null) {
          coefficients_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          coefficientsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDescriptor();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon getDefaultInstanceForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon build() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon buildPartial() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon result = new cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.t_ = t_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rBuilder_ == null) {
          result.r_ = r_;
        } else {
          result.r_ = rBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.encryptedSecret_ = encryptedSecret_;
        if (coefficientsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            coefficients_ = java.util.Collections.unmodifiableList(coefficients_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.coefficients_ = coefficients_;
        } else {
          result.coefficients_ = coefficientsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon) {
          return mergeFrom((cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon other) {
        if (other == cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance()) return this;
        if (other.hasT()) {
          setT(other.getT());
        }
        if (other.hasR()) {
          mergeR(other.getR());
        }
        if (other.hasEncryptedSecret()) {
          setEncryptedSecret(other.getEncryptedSecret());
        }
        if (coefficientsBuilder_ == null) {
          if (!other.coefficients_.isEmpty()) {
            if (coefficients_.isEmpty()) {
              coefficients_ = other.coefficients_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCoefficientsIsMutable();
              coefficients_.addAll(other.coefficients_);
            }
            onChanged();
          }
        } else {
          if (!other.coefficients_.isEmpty()) {
            if (coefficientsBuilder_.isEmpty()) {
              coefficientsBuilder_.dispose();
              coefficientsBuilder_ = null;
              coefficients_ = other.coefficients_;
              bitField0_ = (bitField0_ & ~0x00000008);
              coefficientsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCoefficientsFieldBuilder() : null;
            } else {
              coefficientsBuilder_.addAllMessages(other.coefficients_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasT()) {
          
          return false;
        }
        if (!hasR()) {
          
          return false;
        }
        if (!hasEncryptedSecret()) {
          
          return false;
        }
        if (!getR().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getCoefficientsCount(); i++) {
          if (!getCoefficients(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              t_ = input.readInt32();
              break;
            }
            case 18: {
              cryptocast.crypto.Protos.BInteger.Builder subBuilder = cryptocast.crypto.Protos.BInteger.newBuilder();
              if (hasR()) {
                subBuilder.mergeFrom(getR());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setR(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              encryptedSecret_ = input.readBytes();
              break;
            }
            case 34: {
              cryptocast.crypto.Protos.BInteger.Builder subBuilder = cryptocast.crypto.Protos.BInteger.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCoefficients(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 t = 1;
      private int t_ ;
      public boolean hasT() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getT() {
        return t_;
      }
      public Builder setT(int value) {
        bitField0_ |= 0x00000001;
        t_ = value;
        onChanged();
        return this;
      }
      public Builder clearT() {
        bitField0_ = (bitField0_ & ~0x00000001);
        t_ = 0;
        onChanged();
        return this;
      }
      
      // required .cryptocast.crypto.BInteger r = 2;
      private cryptocast.crypto.Protos.BInteger r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> rBuilder_;
      public boolean hasR() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public cryptocast.crypto.Protos.BInteger getR() {
        if (rBuilder_ == null) {
          return r_;
        } else {
          return rBuilder_.getMessage();
        }
      }
      public Builder setR(cryptocast.crypto.Protos.BInteger value) {
        if (rBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          r_ = value;
          onChanged();
        } else {
          rBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setR(
          cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (rBuilder_ == null) {
          r_ = builderForValue.build();
          onChanged();
        } else {
          rBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeR(cryptocast.crypto.Protos.BInteger value) {
        if (rBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              r_ != cryptocast.crypto.Protos.BInteger.getDefaultInstance()) {
            r_ =
              cryptocast.crypto.Protos.BInteger.newBuilder(r_).mergeFrom(value).buildPartial();
          } else {
            r_ = value;
          }
          onChanged();
        } else {
          rBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearR() {
        if (rBuilder_ == null) {
          r_ = cryptocast.crypto.Protos.BInteger.getDefaultInstance();
          onChanged();
        } else {
          rBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public cryptocast.crypto.Protos.BInteger.Builder getRBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.Protos.BIntegerOrBuilder getROrBuilder() {
        if (rBuilder_ != null) {
          return rBuilder_.getMessageOrBuilder();
        } else {
          return r_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> 
          getRFieldBuilder() {
        if (rBuilder_ == null) {
          rBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder>(
                  r_,
                  getParentForChildren(),
                  isClean());
          r_ = null;
        }
        return rBuilder_;
      }
      
      // required bytes encryptedSecret = 3;
      private com.google.protobuf.ByteString encryptedSecret_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasEncryptedSecret() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getEncryptedSecret() {
        return encryptedSecret_;
      }
      public Builder setEncryptedSecret(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        encryptedSecret_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncryptedSecret() {
        bitField0_ = (bitField0_ & ~0x00000004);
        encryptedSecret_ = getDefaultInstance().getEncryptedSecret();
        onChanged();
        return this;
      }
      
      // repeated .cryptocast.crypto.BInteger coefficients = 4;
      private java.util.List<cryptocast.crypto.Protos.BInteger> coefficients_ =
        java.util.Collections.emptyList();
      private void ensureCoefficientsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          coefficients_ = new java.util.ArrayList<cryptocast.crypto.Protos.BInteger>(coefficients_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> coefficientsBuilder_;
      
      public java.util.List<cryptocast.crypto.Protos.BInteger> getCoefficientsList() {
        if (coefficientsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(coefficients_);
        } else {
          return coefficientsBuilder_.getMessageList();
        }
      }
      public int getCoefficientsCount() {
        if (coefficientsBuilder_ == null) {
          return coefficients_.size();
        } else {
          return coefficientsBuilder_.getCount();
        }
      }
      public cryptocast.crypto.Protos.BInteger getCoefficients(int index) {
        if (coefficientsBuilder_ == null) {
          return coefficients_.get(index);
        } else {
          return coefficientsBuilder_.getMessage(index);
        }
      }
      public Builder setCoefficients(
          int index, cryptocast.crypto.Protos.BInteger value) {
        if (coefficientsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoefficientsIsMutable();
          coefficients_.set(index, value);
          onChanged();
        } else {
          coefficientsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCoefficients(
          int index, cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (coefficientsBuilder_ == null) {
          ensureCoefficientsIsMutable();
          coefficients_.set(index, builderForValue.build());
          onChanged();
        } else {
          coefficientsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCoefficients(cryptocast.crypto.Protos.BInteger value) {
        if (coefficientsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoefficientsIsMutable();
          coefficients_.add(value);
          onChanged();
        } else {
          coefficientsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCoefficients(
          int index, cryptocast.crypto.Protos.BInteger value) {
        if (coefficientsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoefficientsIsMutable();
          coefficients_.add(index, value);
          onChanged();
        } else {
          coefficientsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCoefficients(
          cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (coefficientsBuilder_ == null) {
          ensureCoefficientsIsMutable();
          coefficients_.add(builderForValue.build());
          onChanged();
        } else {
          coefficientsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCoefficients(
          int index, cryptocast.crypto.Protos.BInteger.Builder builderForValue) {
        if (coefficientsBuilder_ == null) {
          ensureCoefficientsIsMutable();
          coefficients_.add(index, builderForValue.build());
          onChanged();
        } else {
          coefficientsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCoefficients(
          java.lang.Iterable<? extends cryptocast.crypto.Protos.BInteger> values) {
        if (coefficientsBuilder_ == null) {
          ensureCoefficientsIsMutable();
          super.addAll(values, coefficients_);
          onChanged();
        } else {
          coefficientsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCoefficients() {
        if (coefficientsBuilder_ == null) {
          coefficients_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          coefficientsBuilder_.clear();
        }
        return this;
      }
      public Builder removeCoefficients(int index) {
        if (coefficientsBuilder_ == null) {
          ensureCoefficientsIsMutable();
          coefficients_.remove(index);
          onChanged();
        } else {
          coefficientsBuilder_.remove(index);
        }
        return this;
      }
      public cryptocast.crypto.Protos.BInteger.Builder getCoefficientsBuilder(
          int index) {
        return getCoefficientsFieldBuilder().getBuilder(index);
      }
      public cryptocast.crypto.Protos.BIntegerOrBuilder getCoefficientsOrBuilder(
          int index) {
        if (coefficientsBuilder_ == null) {
          return coefficients_.get(index);  } else {
          return coefficientsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends cryptocast.crypto.Protos.BIntegerOrBuilder> 
           getCoefficientsOrBuilderList() {
        if (coefficientsBuilder_ != null) {
          return coefficientsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(coefficients_);
        }
      }
      public cryptocast.crypto.Protos.BInteger.Builder addCoefficientsBuilder() {
        return getCoefficientsFieldBuilder().addBuilder(
            cryptocast.crypto.Protos.BInteger.getDefaultInstance());
      }
      public cryptocast.crypto.Protos.BInteger.Builder addCoefficientsBuilder(
          int index) {
        return getCoefficientsFieldBuilder().addBuilder(
            index, cryptocast.crypto.Protos.BInteger.getDefaultInstance());
      }
      public java.util.List<cryptocast.crypto.Protos.BInteger.Builder> 
           getCoefficientsBuilderList() {
        return getCoefficientsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder> 
          getCoefficientsFieldBuilder() {
        if (coefficientsBuilder_ == null) {
          coefficientsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cryptocast.crypto.Protos.BInteger, cryptocast.crypto.Protos.BInteger.Builder, cryptocast.crypto.Protos.BIntegerOrBuilder>(
                  coefficients_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          coefficients_ = null;
        }
        return coefficientsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cryptocast.crypto.naorpinkas.NaorPinkasMessageCommon)
    }
    
    static {
      defaultInstance = new NaorPinkasMessageCommon(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cryptocast.crypto.naorpinkas.NaorPinkasMessageCommon)
  }
  
  public interface NaorPinkasMessageECOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .cryptocast.crypto.naorpinkas.NaorPinkasMessageCommon common = 1;
    boolean hasCommon();
    cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon getCommon();
    cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder getCommonOrBuilder();
    
    // repeated .cryptocast.crypto.naorpinkas.NaorPinkasShareEC shares = 2;
    java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC> 
        getSharesList();
    cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC getShares(int index);
    int getSharesCount();
    java.util.List<? extends cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder> 
        getSharesOrBuilderList();
    cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder getSharesOrBuilder(
        int index);
  }
  public static final class NaorPinkasMessageEC extends
      com.google.protobuf.GeneratedMessage
      implements NaorPinkasMessageECOrBuilder {
    // Use NaorPinkasMessageEC.newBuilder() to construct.
    private NaorPinkasMessageEC(Builder builder) {
      super(builder);
    }
    private NaorPinkasMessageEC(boolean noInit) {}
    
    private static final NaorPinkasMessageEC defaultInstance;
    public static NaorPinkasMessageEC getDefaultInstance() {
      return defaultInstance;
    }
    
    public NaorPinkasMessageEC getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .cryptocast.crypto.naorpinkas.NaorPinkasMessageCommon common = 1;
    public static final int COMMON_FIELD_NUMBER = 1;
    private cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon common_;
    public boolean hasCommon() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon getCommon() {
      return common_;
    }
    public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder getCommonOrBuilder() {
      return common_;
    }
    
    // repeated .cryptocast.crypto.naorpinkas.NaorPinkasShareEC shares = 2;
    public static final int SHARES_FIELD_NUMBER = 2;
    private java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC> shares_;
    public java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC> getSharesList() {
      return shares_;
    }
    public java.util.List<? extends cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder> 
        getSharesOrBuilderList() {
      return shares_;
    }
    public int getSharesCount() {
      return shares_.size();
    }
    public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC getShares(int index) {
      return shares_.get(index);
    }
    public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder getSharesOrBuilder(
        int index) {
      return shares_.get(index);
    }
    
    private void initFields() {
      common_ = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
      shares_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasCommon()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCommon().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSharesCount(); i++) {
        if (!getShares(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, common_);
      }
      for (int i = 0; i < shares_.size(); i++) {
        output.writeMessage(2, shares_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, common_);
      }
      for (int i = 0; i < shares_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, shares_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageECOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_fieldAccessorTable;
      }
      
      // Construct using cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCommonFieldBuilder();
          getSharesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (commonBuilder_ == null) {
          common_ = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
        } else {
          commonBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sharesBuilder_ == null) {
          shares_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sharesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC.getDescriptor();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC getDefaultInstanceForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC.getDefaultInstance();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC build() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC buildPartial() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC result = new cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (commonBuilder_ == null) {
          result.common_ = common_;
        } else {
          result.common_ = commonBuilder_.build();
        }
        if (sharesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            shares_ = java.util.Collections.unmodifiableList(shares_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.shares_ = shares_;
        } else {
          result.shares_ = sharesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC) {
          return mergeFrom((cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC other) {
        if (other == cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC.getDefaultInstance()) return this;
        if (other.hasCommon()) {
          mergeCommon(other.getCommon());
        }
        if (sharesBuilder_ == null) {
          if (!other.shares_.isEmpty()) {
            if (shares_.isEmpty()) {
              shares_ = other.shares_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSharesIsMutable();
              shares_.addAll(other.shares_);
            }
            onChanged();
          }
        } else {
          if (!other.shares_.isEmpty()) {
            if (sharesBuilder_.isEmpty()) {
              sharesBuilder_.dispose();
              sharesBuilder_ = null;
              shares_ = other.shares_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sharesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSharesFieldBuilder() : null;
            } else {
              sharesBuilder_.addAllMessages(other.shares_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasCommon()) {
          
          return false;
        }
        if (!getCommon().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getSharesCount(); i++) {
          if (!getShares(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder subBuilder = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.newBuilder();
              if (hasCommon()) {
                subBuilder.mergeFrom(getCommon());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCommon(subBuilder.buildPartial());
              break;
            }
            case 18: {
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder subBuilder = cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addShares(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .cryptocast.crypto.naorpinkas.NaorPinkasMessageCommon common = 1;
      private cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon common_ = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder> commonBuilder_;
      public boolean hasCommon() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon getCommon() {
        if (commonBuilder_ == null) {
          return common_;
        } else {
          return commonBuilder_.getMessage();
        }
      }
      public Builder setCommon(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon value) {
        if (commonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          common_ = value;
          onChanged();
        } else {
          commonBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCommon(
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder builderForValue) {
        if (commonBuilder_ == null) {
          common_ = builderForValue.build();
          onChanged();
        } else {
          commonBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCommon(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon value) {
        if (commonBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              common_ != cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance()) {
            common_ =
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.newBuilder(common_).mergeFrom(value).buildPartial();
          } else {
            common_ = value;
          }
          onChanged();
        } else {
          commonBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCommon() {
        if (commonBuilder_ == null) {
          common_ = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
          onChanged();
        } else {
          commonBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder getCommonBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCommonFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder getCommonOrBuilder() {
        if (commonBuilder_ != null) {
          return commonBuilder_.getMessageOrBuilder();
        } else {
          return common_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder> 
          getCommonFieldBuilder() {
        if (commonBuilder_ == null) {
          commonBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder>(
                  common_,
                  getParentForChildren(),
                  isClean());
          common_ = null;
        }
        return commonBuilder_;
      }
      
      // repeated .cryptocast.crypto.naorpinkas.NaorPinkasShareEC shares = 2;
      private java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC> shares_ =
        java.util.Collections.emptyList();
      private void ensureSharesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          shares_ = new java.util.ArrayList<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC>(shares_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder> sharesBuilder_;
      
      public java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC> getSharesList() {
        if (sharesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shares_);
        } else {
          return sharesBuilder_.getMessageList();
        }
      }
      public int getSharesCount() {
        if (sharesBuilder_ == null) {
          return shares_.size();
        } else {
          return sharesBuilder_.getCount();
        }
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC getShares(int index) {
        if (sharesBuilder_ == null) {
          return shares_.get(index);
        } else {
          return sharesBuilder_.getMessage(index);
        }
      }
      public Builder setShares(
          int index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.set(index, value);
          onChanged();
        } else {
          sharesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setShares(
          int index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.set(index, builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addShares(cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.add(value);
          onChanged();
        } else {
          sharesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addShares(
          int index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.add(index, value);
          onChanged();
        } else {
          sharesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addShares(
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.add(builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addShares(
          int index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.add(index, builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllShares(
          java.lang.Iterable<? extends cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC> values) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          super.addAll(values, shares_);
          onChanged();
        } else {
          sharesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearShares() {
        if (sharesBuilder_ == null) {
          shares_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sharesBuilder_.clear();
        }
        return this;
      }
      public Builder removeShares(int index) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.remove(index);
          onChanged();
        } else {
          sharesBuilder_.remove(index);
        }
        return this;
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder getSharesBuilder(
          int index) {
        return getSharesFieldBuilder().getBuilder(index);
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder getSharesOrBuilder(
          int index) {
        if (sharesBuilder_ == null) {
          return shares_.get(index);  } else {
          return sharesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder> 
           getSharesOrBuilderList() {
        if (sharesBuilder_ != null) {
          return sharesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shares_);
        }
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder addSharesBuilder() {
        return getSharesFieldBuilder().addBuilder(
            cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.getDefaultInstance());
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder addSharesBuilder(
          int index) {
        return getSharesFieldBuilder().addBuilder(
            index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.getDefaultInstance());
      }
      public java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder> 
           getSharesBuilderList() {
        return getSharesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder> 
          getSharesFieldBuilder() {
        if (sharesBuilder_ == null) {
          sharesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareECOrBuilder>(
                  shares_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          shares_ = null;
        }
        return sharesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cryptocast.crypto.naorpinkas.NaorPinkasMessageEC)
    }
    
    static {
      defaultInstance = new NaorPinkasMessageEC(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cryptocast.crypto.naorpinkas.NaorPinkasMessageEC)
  }
  
  public interface NaorPinkasMessageSchnorrOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .cryptocast.crypto.naorpinkas.NaorPinkasMessageCommon common = 1;
    boolean hasCommon();
    cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon getCommon();
    cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder getCommonOrBuilder();
    
    // repeated .cryptocast.crypto.naorpinkas.NaorPinkasShareSchnorr shares = 2;
    java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr> 
        getSharesList();
    cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr getShares(int index);
    int getSharesCount();
    java.util.List<? extends cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder> 
        getSharesOrBuilderList();
    cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder getSharesOrBuilder(
        int index);
  }
  public static final class NaorPinkasMessageSchnorr extends
      com.google.protobuf.GeneratedMessage
      implements NaorPinkasMessageSchnorrOrBuilder {
    // Use NaorPinkasMessageSchnorr.newBuilder() to construct.
    private NaorPinkasMessageSchnorr(Builder builder) {
      super(builder);
    }
    private NaorPinkasMessageSchnorr(boolean noInit) {}
    
    private static final NaorPinkasMessageSchnorr defaultInstance;
    public static NaorPinkasMessageSchnorr getDefaultInstance() {
      return defaultInstance;
    }
    
    public NaorPinkasMessageSchnorr getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .cryptocast.crypto.naorpinkas.NaorPinkasMessageCommon common = 1;
    public static final int COMMON_FIELD_NUMBER = 1;
    private cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon common_;
    public boolean hasCommon() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon getCommon() {
      return common_;
    }
    public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder getCommonOrBuilder() {
      return common_;
    }
    
    // repeated .cryptocast.crypto.naorpinkas.NaorPinkasShareSchnorr shares = 2;
    public static final int SHARES_FIELD_NUMBER = 2;
    private java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr> shares_;
    public java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr> getSharesList() {
      return shares_;
    }
    public java.util.List<? extends cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder> 
        getSharesOrBuilderList() {
      return shares_;
    }
    public int getSharesCount() {
      return shares_.size();
    }
    public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr getShares(int index) {
      return shares_.get(index);
    }
    public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder getSharesOrBuilder(
        int index) {
      return shares_.get(index);
    }
    
    private void initFields() {
      common_ = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
      shares_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasCommon()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCommon().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSharesCount(); i++) {
        if (!getShares(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, common_);
      }
      for (int i = 0; i < shares_.size(); i++) {
        output.writeMessage(2, shares_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, common_);
      }
      for (int i = 0; i < shares_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, shares_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorrOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cryptocast.crypto.naorpinkas.Protos.internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_fieldAccessorTable;
      }
      
      // Construct using cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCommonFieldBuilder();
          getSharesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (commonBuilder_ == null) {
          common_ = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
        } else {
          commonBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sharesBuilder_ == null) {
          shares_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sharesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr.getDescriptor();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr getDefaultInstanceForType() {
        return cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr.getDefaultInstance();
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr build() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr buildPartial() {
        cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr result = new cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (commonBuilder_ == null) {
          result.common_ = common_;
        } else {
          result.common_ = commonBuilder_.build();
        }
        if (sharesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            shares_ = java.util.Collections.unmodifiableList(shares_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.shares_ = shares_;
        } else {
          result.shares_ = sharesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr) {
          return mergeFrom((cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr other) {
        if (other == cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr.getDefaultInstance()) return this;
        if (other.hasCommon()) {
          mergeCommon(other.getCommon());
        }
        if (sharesBuilder_ == null) {
          if (!other.shares_.isEmpty()) {
            if (shares_.isEmpty()) {
              shares_ = other.shares_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSharesIsMutable();
              shares_.addAll(other.shares_);
            }
            onChanged();
          }
        } else {
          if (!other.shares_.isEmpty()) {
            if (sharesBuilder_.isEmpty()) {
              sharesBuilder_.dispose();
              sharesBuilder_ = null;
              shares_ = other.shares_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sharesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSharesFieldBuilder() : null;
            } else {
              sharesBuilder_.addAllMessages(other.shares_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasCommon()) {
          
          return false;
        }
        if (!getCommon().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getSharesCount(); i++) {
          if (!getShares(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder subBuilder = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.newBuilder();
              if (hasCommon()) {
                subBuilder.mergeFrom(getCommon());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCommon(subBuilder.buildPartial());
              break;
            }
            case 18: {
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder subBuilder = cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addShares(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .cryptocast.crypto.naorpinkas.NaorPinkasMessageCommon common = 1;
      private cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon common_ = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder> commonBuilder_;
      public boolean hasCommon() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon getCommon() {
        if (commonBuilder_ == null) {
          return common_;
        } else {
          return commonBuilder_.getMessage();
        }
      }
      public Builder setCommon(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon value) {
        if (commonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          common_ = value;
          onChanged();
        } else {
          commonBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCommon(
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder builderForValue) {
        if (commonBuilder_ == null) {
          common_ = builderForValue.build();
          onChanged();
        } else {
          commonBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCommon(cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon value) {
        if (commonBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              common_ != cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance()) {
            common_ =
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.newBuilder(common_).mergeFrom(value).buildPartial();
          } else {
            common_ = value;
          }
          onChanged();
        } else {
          commonBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCommon() {
        if (commonBuilder_ == null) {
          common_ = cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.getDefaultInstance();
          onChanged();
        } else {
          commonBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder getCommonBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCommonFieldBuilder().getBuilder();
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder getCommonOrBuilder() {
        if (commonBuilder_ != null) {
          return commonBuilder_.getMessageOrBuilder();
        } else {
          return common_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder> 
          getCommonFieldBuilder() {
        if (commonBuilder_ == null) {
          commonBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommonOrBuilder>(
                  common_,
                  getParentForChildren(),
                  isClean());
          common_ = null;
        }
        return commonBuilder_;
      }
      
      // repeated .cryptocast.crypto.naorpinkas.NaorPinkasShareSchnorr shares = 2;
      private java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr> shares_ =
        java.util.Collections.emptyList();
      private void ensureSharesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          shares_ = new java.util.ArrayList<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr>(shares_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder> sharesBuilder_;
      
      public java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr> getSharesList() {
        if (sharesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shares_);
        } else {
          return sharesBuilder_.getMessageList();
        }
      }
      public int getSharesCount() {
        if (sharesBuilder_ == null) {
          return shares_.size();
        } else {
          return sharesBuilder_.getCount();
        }
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr getShares(int index) {
        if (sharesBuilder_ == null) {
          return shares_.get(index);
        } else {
          return sharesBuilder_.getMessage(index);
        }
      }
      public Builder setShares(
          int index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.set(index, value);
          onChanged();
        } else {
          sharesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setShares(
          int index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.set(index, builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addShares(cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.add(value);
          onChanged();
        } else {
          sharesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addShares(
          int index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.add(index, value);
          onChanged();
        } else {
          sharesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addShares(
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.add(builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addShares(
          int index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.add(index, builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllShares(
          java.lang.Iterable<? extends cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr> values) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          super.addAll(values, shares_);
          onChanged();
        } else {
          sharesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearShares() {
        if (sharesBuilder_ == null) {
          shares_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sharesBuilder_.clear();
        }
        return this;
      }
      public Builder removeShares(int index) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.remove(index);
          onChanged();
        } else {
          sharesBuilder_.remove(index);
        }
        return this;
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder getSharesBuilder(
          int index) {
        return getSharesFieldBuilder().getBuilder(index);
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder getSharesOrBuilder(
          int index) {
        if (sharesBuilder_ == null) {
          return shares_.get(index);  } else {
          return sharesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder> 
           getSharesOrBuilderList() {
        if (sharesBuilder_ != null) {
          return sharesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shares_);
        }
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder addSharesBuilder() {
        return getSharesFieldBuilder().addBuilder(
            cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.getDefaultInstance());
      }
      public cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder addSharesBuilder(
          int index) {
        return getSharesFieldBuilder().addBuilder(
            index, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.getDefaultInstance());
      }
      public java.util.List<cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder> 
           getSharesBuilderList() {
        return getSharesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder> 
          getSharesFieldBuilder() {
        if (sharesBuilder_ == null) {
          sharesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder, cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorrOrBuilder>(
                  shares_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          shares_ = null;
        }
        return sharesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cryptocast.crypto.naorpinkas.NaorPinkasMessageSchnorr)
    }
    
    static {
      defaultInstance = new NaorPinkasMessageSchnorr(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cryptocast.crypto.naorpinkas.NaorPinkasMessageSchnorr)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)cryptocast/crypto/naorpinkas/Protos.pr" +
      "oto\022\034cryptocast.crypto.naorpinkas\032\036crypt" +
      "ocast/crypto/Protos.proto\"\215\001\n\021NaorPinkas" +
      "ShareEC\022&\n\001r\030\001 \002(\0132\033.cryptocast.crypto.B" +
      "Integer\022&\n\001i\030\002 \002(\0132\033.cryptocast.crypto.B" +
      "Integer\022(\n\004grpi\030\003 \002(\0132\032.cryptocast.crypt" +
      "o.ECPoint\"\223\001\n\026NaorPinkasShareSchnorr\022&\n\001" +
      "r\030\001 \002(\0132\033.cryptocast.crypto.BInteger\022&\n\001" +
      "i\030\002 \002(\0132\033.cryptocast.crypto.BInteger\022)\n\004" +
      "grpi\030\003 \002(\0132\033.cryptocast.crypto.BInteger\"",
      "\230\001\n\027NaorPinkasMessageCommon\022\t\n\001t\030\001 \002(\005\022&" +
      "\n\001r\030\002 \002(\0132\033.cryptocast.crypto.BInteger\022\027" +
      "\n\017encryptedSecret\030\003 \002(\014\0221\n\014coefficients\030" +
      "\004 \003(\0132\033.cryptocast.crypto.BInteger\"\235\001\n\023N" +
      "aorPinkasMessageEC\022E\n\006common\030\001 \002(\01325.cry" +
      "ptocast.crypto.naorpinkas.NaorPinkasMess" +
      "ageCommon\022?\n\006shares\030\002 \003(\0132/.cryptocast.c" +
      "rypto.naorpinkas.NaorPinkasShareEC\"\247\001\n\030N" +
      "aorPinkasMessageSchnorr\022E\n\006common\030\001 \002(\0132" +
      "5.cryptocast.crypto.naorpinkas.NaorPinka",
      "sMessageCommon\022D\n\006shares\030\002 \003(\01324.cryptoc" +
      "ast.crypto.naorpinkas.NaorPinkasShareSch" +
      "norr"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareEC_descriptor,
              new java.lang.String[] { "R", "I", "Grpi", },
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.class,
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareEC.Builder.class);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cryptocast_crypto_naorpinkas_NaorPinkasShareSchnorr_descriptor,
              new java.lang.String[] { "R", "I", "Grpi", },
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.class,
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasShareSchnorr.Builder.class);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageCommon_descriptor,
              new java.lang.String[] { "T", "R", "EncryptedSecret", "Coefficients", },
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.class,
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageCommon.Builder.class);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageEC_descriptor,
              new java.lang.String[] { "Common", "Shares", },
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC.class,
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageEC.Builder.class);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cryptocast_crypto_naorpinkas_NaorPinkasMessageSchnorr_descriptor,
              new java.lang.String[] { "Common", "Shares", },
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr.class,
              cryptocast.crypto.naorpinkas.Protos.NaorPinkasMessageSchnorr.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cryptocast.crypto.Protos.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
